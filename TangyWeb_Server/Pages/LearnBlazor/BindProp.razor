@page "/learnblazor/bindprop"
<h2 class="text-success">Individual Product</h2>
<div class="row">
    <div class="col-6 border p-0 mb-5">
        <h3 class="text-primary">Product Playground</h3>
        <hr />
        <div>
            Active<input type="checkbox" @bind-value="@Product.IsActive" checked="@(Product.IsActive?"checked":null)" /><br />
        </div>
        <div>
            Price: <input type="number" @bind-value="@Product.Price" @bind-value:event="oninput" /><br />
        </div>
        <div>
            Product Properties:
            <select @bind="selectedProp">
                @foreach (var prop in Product.ProductProperties)
                {
                    <option value="@prop.Key">@prop.Key</option>
                }
            </select>
        </div>
        @*Price: <input type="number" @bind="@Product.Price" @bind:event="oninput" />*@
    </div>
<div class="col-6 border p-0 mb-5">
    <h3 class="text-primary">Product Summary</h3>
    <hr />
    <p>Name: @Product.Name</p><br />
    <p>IsActive: @Product.IsActive</p><br />
    <p>Price: @Product.Price</p><br />

    <p>this product is @(Product.IsActive ? "Active" : "Inactive")</p><br />
    <p>Property Selected : @selectedProp</p><br />
    @if (!String.IsNullOrWhiteSpace(selectedProp))
    {
        <p>Propery Value : @Product.ProductProperties.FirstOrDefault(u => u.Key == selectedProp).Value </p>
    }
</div>

</div>
<div class="row">
    <div class="col-12">
        <div>
        <h2 class="text-success">Product Table</h2>
            @foreach (Demo_Product item in Products)
            {
                <div class="row py-1">
                    <div class="col-5">
                        <input type="text" @bind-value=item.Name @bind-value:event="oninput" />
                    </div>
                    <div class="col-5">
                        <input type="number" @bind-value=item.Price @bind-value:event="oninput" />
                    </div>
                    <div class="col-2">
                        <input type="checkbox" @bind-value=item.IsActive checked="@(item.IsActive?"checked":null)" />
                    </div>

                </div>
            }
        </div>
    </div>
</div>
<div class="row pt-5">
    <div class="col-12">
        <h1>Product Summary</h1><br/>
        @foreach (Demo_Product item in Products)
        {
            <p>@item.Name [@item.Price] is @(item.IsActive?"Active":"InActive")</p>
        }
    </div>
</div>
@code {
    private string selectedProp = "";

    Demo_Product Product = new()
        {
            Id = 1,
            Name = "Rose Candle",
            IsActive = true,
            Price = 10.99,
            ProductProperties = new List<Demo_ProductProp>()
            {
                new Demo_ProductProp{Id=1, Key="Color", Value="Black"},
                new Demo_ProductProp{Id=2, Key="Flavor", Value="Rose Jasmine"},
                new Demo_ProductProp{Id=3, Key="Size", Value="20oz"},
            }
        };

    List<Demo_Product> Products = new();

    protected override void OnInitialized()
    {
        Products.Add(new()
            {
                Id = 1,
                Name = "Midnight Blaze",
                IsActive = false,
                Price = 3.99,
        ProductProperties = new()
                {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Rose"},
                     new Demo_ProductProp { Id = 2, Key = "Size", Value = "20oz"},
                    new Demo_ProductProp { Id = 3, Key = "Color", Value="Purple" }
                }
            });

        Products.Add(new()
            {
                Id = 2,
                Name = "Blossom Lily",
                IsActive = true,
                Price=65.43,
                ProductProperties = new()
            {
                new Demo_ProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
                new Demo_ProductProp { Id = 2, Key = "Size", Value = "18oz" },
                new Demo_ProductProp {Id = 3,Key = "Color",Value = "White"}
            }
            });
    }
}
